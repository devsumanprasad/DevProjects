{"version":3,"sources":["services/EmployeeService.js","componants/ListEmployeeComponant.jsx","componants/HeaderComponant.jsx","componants/FooterComponant.jsx","componants/CreateEmployeeComponant.jsx","componants/ViewEmployeeComponant.jsx","componants/UpdateEmployeeComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["EMPLOYEE_API_BASE_URL","axios","get","employee","post","employeeId","put","delete","ListEmployeeComponant","props","state","employees","addEmployee","bind","editEmployee","deleteEmployee","id","EmployeeService","then","res","setState","filter","this","history","push","getEmployees","data","className","onClick","map","firstName","lastName","emailId","viewEmployee","Component","HeaderComponant","href","FooterComponant","CreateEmployeeComponant","saveOrUpdateEmployee","e","preventDefault","console","log","JSON","stringify","createEmployee","updateEmployee","changeFirstNameHandler","event","target","value","changeLastNameHandler","changeEmailHandler","match","params","getEmployeeById","getTitle","action","type","placeholder","name","onChange","cancel","style","marginLeft","ViewEmployeeComponant","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3107eec2.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst EMPLOYEE_API_BASE_URL = \"http://localhost:8080/api/v1/employees\";\r\n\r\n\r\nclass EmployeeService{\r\n\r\n    getEmployees(){\r\n        return axios.get(EMPLOYEE_API_BASE_URL);\r\n    }\r\n\r\n    createEmployee(employee){\r\n        return axios.post(EMPLOYEE_API_BASE_URL, employee);\r\n    }\r\n    getEmployeeById(employeeId){\r\n        return axios.get(EMPLOYEE_API_BASE_URL+'/'+employeeId);\r\n    }\r\n\r\n    updateEmployee(employee, employeeId){\r\n        return axios.put(EMPLOYEE_API_BASE_URL+'/'+employeeId, employee);\r\n    }\r\n\r\n    deleteEmployee(employeeId){\r\n        return axios.delete(EMPLOYEE_API_BASE_URL+\"/\"+employeeId);\r\n    }\r\n}\r\nexport default new EmployeeService()","import React, { Component } from 'react'\r\nimport EmployeeService from '../services/EmployeeService'\r\n\r\n class ListEmployeeComponant extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            employees: []\r\n        }\r\n        this.addEmployee = this.addEmployee.bind(this);\r\n        this.editEmployee = this.editEmployee.bind(this);\r\n        this.deleteEmployee = this.deleteEmployee.bind(this);\r\n    }\r\n\r\n\r\n    deleteEmployee(id){\r\n        //rest api call\r\n        EmployeeService.deleteEmployee(id).then(res => {\r\n            this.setState({employees: this.state.employees.filter(employee => employee.id !==id)});\r\n        });\r\n    }\r\n\r\n    viewEmployee(id){\r\n        this.props.history.push(`/view-employee/${id}`);\r\n    }\r\n\r\n    editEmployee(id){\r\n        this.props.history.push(`/add-employee/${id}`);\r\n    }\r\n    componentDidMount(){\r\n        EmployeeService.getEmployees().then((res)=>{\r\n            this.setState({employees:res.data});\r\n        });\r\n    }\r\n\r\n    addEmployee(){\r\n        this.props.history.push('/add-employee/_add');\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"text-center\">Employees List</h2>\r\n                <div className=\"row\">\r\n                    <button className=\"btn btn-primary\" onClick={this.addEmployee}>Add Employee</button>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <table className=\"table table-strped table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Employee First Name</th>\r\n                                <th>Employee Last Name</th>\r\n                                <th>Employee Email ID</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.employees.map(\r\n                                    employee =>\r\n                                    <tr key = {employee.id}>\r\n                                        <td>\r\n                                            {employee.firstName}\r\n                                        </td>\r\n                                        <td>\r\n                                            {employee.lastName}\r\n                                        </td>\r\n                                        <td>\r\n                                            {employee.emailId}\r\n                                        </td>\r\n                                        <td>\r\n                                            <button onClick={()=>this.editEmployee(employee.id)} className = \"btn btn-info mx-3\">\r\n                                                Update\r\n                                            </button>\r\n                                            <button onClick={()=>this.deleteEmployee(employee.id)} className = \"btn btn-danger mx-3\">\r\n                                                Delete\r\n                                            </button>\r\n                                            <button onClick={()=>this.viewEmployee(employee.id)} className = \"btn btn-primary mx-3\">\r\n                                                View\r\n                                            </button>\r\n                                        </td>\r\n\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ListEmployeeComponant;\r\n","import React, { Component } from 'react'\r\n\r\nclass HeaderComponant extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header className=\"my-3\">\r\n                    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n                        <div><a href=\"https://crudibartsdev.000webhostapp.com/\" className=\"navbar-brand\">Employee Management App</a></div>\r\n\r\n                    </nav>\r\n                </header>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default HeaderComponant\r\n","import React, { Component } from 'react'\r\n\r\nclass FooterComponant extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <footer className=\"footer\">\r\n                    <span className=\"text-muted mx-2\">All Rights Reserved 2021 @devsumanprasad</span>\r\n                    <a href=\"https://qrdevibarts.000webhostapp.com/\" className=\"navbar-brand text-muted\">QR code generator App</a>\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default FooterComponant;","import React, { Component } from 'react'\r\nimport EmployeeService from '../services/EmployeeService';\r\n\r\nclass CreateEmployeeComponant extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n                //step2\r\n                id: this.props.match.params.id,\r\n                firstName: '',\r\n                lastName: '',\r\n                emailId: ''\r\n        }\r\n        this.changeFirstNameHandler = this.changeFirstNameHandler.bind(this);\r\n        this.changeLastNameHandler = this.changeLastNameHandler.bind(this);\r\n        this.changeEmailHandler = this.changeEmailHandler.bind(this);\r\n        this.saveOrUpdateEmployee = this.saveOrUpdateEmployee.bind(this);\r\n\r\n    }\r\n\r\n    //step3\r\n    componentDidMount(){\r\n\r\n        //step4\r\n        if(this.state.id===\"_add\"){\r\n            return\r\n        }\r\n        else{\r\n            EmployeeService.getEmployeeById(this.state.id).then(res => {\r\n                let employee = res.data;\r\n                this.setState({firstName: employee.firstName,\r\n                    lastName: employee.lastName,\r\n                    emailId: employee.emailId\r\n                });\r\n            });\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    saveOrUpdateEmployee = (e)=>{\r\n        e.preventDefault();\r\n\r\n        let employee = {firstName:this.state.firstName, lastName:this.state.lastName, emailId:this.state.emailId};\r\n        console.log('employee=> '+ JSON.stringify(employee));\r\n\r\n        //step5\r\n        if(this.state.id===\"_add\"){\r\n            EmployeeService.createEmployee(employee).then(res =>{\r\n                this.props.history.push('/employees');\r\n            });\r\n        }else{\r\n            EmployeeService.updateEmployee(employee, this.state.id).then(res =>{\r\n                this.props.history.push('/employees');\r\n            });\r\n        }\r\n\r\n        \r\n    }\r\n    changeFirstNameHandler=(event)=>{\r\n        this.setState({firstName:event.target.value});\r\n    }\r\n    changeLastNameHandler=(event)=>{\r\n        this.setState({lastName:event.target.value});\r\n    }\r\n    changeEmailHandler=(event)=>{\r\n        this.setState({emailId:event.target.value});\r\n    }\r\n    cancel(){\r\n        this.props.history.push('/employees');\r\n    }\r\n\r\n    getTitle(){\r\n        if(this.state.id===\"_add\"){\r\n            return <h3 className=\"text-center\">Add Employee</h3>\r\n        }else{\r\n            return <h3 className=\"text-center\">Update Employee</h3>\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                            {\r\n                                this.getTitle()\r\n                            }\r\n                                <div className=\"card-body\">\r\n                                    <form action=\"\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>First Name</label>\r\n                                            <input type=\"text\" placeholder=\"First Name\" name=\"firstName\" className=\"form-control\"\r\n                                            value={this.state.firstName} onChange={this.changeFirstNameHandler} />\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label>Last Name</label>\r\n                                            <input type=\"text\" placeholder=\"Last Name\" name=\"lastName\" className=\"form-control\"\r\n                                            value={this.state.lastName} onChange={this.changeLastNameHandler} />\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label>Email ID</label>\r\n                                            <input placeholder=\"Email Id\" name=\"emailId\" className=\"form-control\"\r\n                                            value={this.state.emailId} onChange={this.changeEmailHandler} />\r\n                                        </div>\r\n                                    <button className=\"btn btn-success\" onClick={this.saveOrUpdateEmployee}>Save</button>\r\n                                    <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft:\"10px\"}}>Cancel</button>\r\n                                    </form>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CreateEmployeeComponant;","import React, { Component } from 'react'\r\nimport EmployeeService from '../services/EmployeeService'\r\n class ViewEmployeeComponant extends Component {\r\n     constructor(props){\r\n         super(props)\r\n\r\n         this.state = {\r\n            id: this.props.match.params.id,\r\n            employee: {}\r\n         }\r\n     }\r\n     componentDidMount(){\r\n         EmployeeService.getEmployeeById(this.state.id).then(res =>{\r\n            this.setState({employee: res.data});\r\n         });\r\n     }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <hr />\r\n                <div className=\"card col-md-6 offset-md-3\">\r\n                    <h3 className=\"text-center\">View Employee Details</h3>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <label>Employee First Name:</label>\r\n                            <div>{this.state.employee.firstName}</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <label>Employee Last Name:</label>\r\n                            <div>{this.state.employee.lastName}</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <label>Employee Email Id:</label>\r\n                            <div>{this.state.employee.emailId}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ViewEmployeeComponant\r\n","import React, { Component } from 'react'\r\nimport EmployeeService from '../services/EmployeeService';\r\n\r\nclass UpdateEmployeeComponent extends Component {\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n                id: this.props.match.params.id,\r\n                firstName: '',\r\n                lastName: '',\r\n                emailId: ''\r\n        }\r\n        this.changeFirstNameHandler = this.changeFirstNameHandler.bind(this);\r\n        this.changeLastNameHandler = this.changeLastNameHandler.bind(this);\r\n        this.changeEmailHandler = this.changeEmailHandler.bind(this);\r\n        this.updateEmployee = this.updateEmployee.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        EmployeeService.getEmployeeById(this.state.id).then(res => {\r\n            let employee = res.data;\r\n            this.setState({firstName: employee.firstName,\r\n                lastName: employee.lastName,\r\n                emailId: employee.emailId\r\n            });\r\n        });\r\n    }\r\n    updateEmployee = (e)=>{\r\n        e.preventDefault();\r\n\r\n        let employee = {firstName:this.state.firstName, lastName:this.state.lastName, emailId:this.state.emailId};\r\n        console.log('employee=> '+ JSON.stringify(employee));\r\n        EmployeeService.updateEmployee(employee, this.state.id).then(res =>{\r\n            this.props.history.push('/employees');\r\n        });\r\n        \r\n    }\r\n    changeFirstNameHandler=(event)=>{\r\n        this.setState({firstName:event.target.value});\r\n    }\r\n    changeLastNameHandler=(event)=>{\r\n        this.setState({lastName:event.target.value});\r\n    }\r\n    changeEmailHandler=(event)=>{\r\n        this.setState({emailId:event.target.value});\r\n    }\r\n    cancel(){\r\n        this.props.history.push('/employees');\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                            <h3 className=\"text-center\">Update Employee</h3>\r\n                                <div className=\"card-body\">\r\n                                    <form action=\"\">\r\n                                        <div className=\"form-group\">\r\n                                            <label>First Name</label>\r\n                                            <input type=\"text\" placeholder=\"First Name\" name=\"firstName\" className=\"form-control\"\r\n                                            value={this.state.firstName} onChange={this.changeFirstNameHandler} />\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label>Last Name</label>\r\n                                            <input type=\"text\" placeholder=\"Last Name\" name=\"lastName\" className=\"form-control\"\r\n                                            value={this.state.lastName} onChange={this.changeLastNameHandler} />\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label>Email ID</label>\r\n                                            <input placeholder=\"Email Id\" name=\"emailId\" className=\"form-control\"\r\n                                            value={this.state.emailId} onChange={this.changeEmailHandler} />\r\n                                        </div>\r\n                                    <button className=\"btn btn-success\" onClick={this.updateEmployee}>Save</button>\r\n                                    <button className=\"btn btn-danger\" onClick={this.cancel.bind(this)} style={{marginLeft:\"10px\"}}>Cancel</button>\r\n                                    </form>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default UpdateEmployeeComponent","import './App.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport ListEmployeeComponant from './componants/ListEmployeeComponant';\nimport HeaderComponant from './componants/HeaderComponant';\nimport FooterComponant from './componants/FooterComponant';\nimport CreateEmployeeComponant from './componants/CreateEmployeeComponant';\nimport UpdateEmployeeComponant from './componants/UpdateEmployeeComponent';\nimport ViewEmployeeComponant from './componants/ViewEmployeeComponant';\n\nfunction App() {\n  return (\n    \n    <div>\n      <Router>  \n      <HeaderComponant/>\n        <div className=\"container\">\n          <Switch> \n            <Route path = \"/\" exact component = {ListEmployeeComponant}></Route>\n            <Route path = \"/employees\" component = {ListEmployeeComponant}></Route>\n            //step1\n            <Route path = \"/add-employee/:id\" component = {CreateEmployeeComponant}></Route>\n            {/*<Route path = \"/update-employee/:id\" component = {UpdateEmployeeComponant}></Route>*/}\n            <Route path = \"/view-employee/:id\" component = {ViewEmployeeComponant}></Route>\n          </Switch>\n        </div>\n        <FooterComponant/>\n        </Router>\n    </div>\n    \n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}